No 1.
is391zey@ct-bsys-ws19-3:~/Documents/Bsys/14_MemoryApi$ ./null
Segmentation fault


-------------------------------------------------------------------------------------------------
No 2.


is391zey@ct-bsys-ws19-3:~/Documents/Bsys/14_MemoryApi$ gdb null


For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from null...done.
(gdb) run
Starting program: /home/is391zey/Documents/Bsys/14_MemoryApi/null

Program received signal SIGSEGV, Segmentation fault.
0x0000555555555149 in main () at null.c:11
11              printf("%d", *intPointer);




-------------------------------------------------------------------------------------------------

No 3.


is391zey@ct-bsys-ws19-3:~/Documents/Bsys/14_MemoryApi$ valgrind --leak-check=yes ./null
==3935== Memcheck, a memory error detector
==3935== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3935== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==3935== Command: ./null
==3935==
==3935== Invalid read of size 4
==3935==    at 0x109149: main (null.c:11)
==3935==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3935==
==3935==
==3935== Process terminating with default action of signal 11 (SIGSEGV)
==3935==  Access not within mapped region at address 0x0
==3935==    at 0x109149: main (null.c:11)
==3935==  If you believe this happened as a result of a stack
==3935==  overflow in your program's main thread (unlikely but
==3935==  possible), you can try to increase the size of the
==3935==  main thread stack using the --main-stacksize= flag.
==3935==  The main thread stack size used in this run was 8388608.
==3935==
==3935== HEAP SUMMARY:
==3935==     in use at exit: 0 bytes in 0 blocks
==3935==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==3935==
==3935== All heap blocks were freed -- no leaks are possible
==3935==
==3935== For counts of detected and suppressed errors, rerun with: -v
==3935== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Segmentation fault


-------------------------------------------------------------------------------------------------
No 4.

is391zey@ct-bsys-ws19-3:~/Documents/Bsys/14_MemoryApi$ gcc -g malloc.c -o malloc
is391zey@ct-bsys-ws19-3:~/Documents/Bsys/14_MemoryApi$ gdb malloc

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from malloc...done.
(gdb) run
Starting program: /home/is391zey/Documents/Bsys/14_MemoryApi/malloc
[Inferior 1 (process 4327) exited normally]
(gdb) q


-------------------------------------------------------------------------------------------------



is391zey@ct-bsys-ws19-3:~/Documents/Bsys/14_MemoryApi$ valgrind --leak-check=yes ./malloc
==4391== Memcheck, a memory error detector
==4391== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==4391== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==4391== Command: ./malloc
==4391==
==4391==
==4391== HEAP SUMMARY:
==4391==     in use at exit: 4 bytes in 1 blocks
==4391==   total heap usage: 1 allocs, 0 frees, 4 bytes allocated
==4391==
==4391== 4 bytes in 1 blocks are definitely lost in loss record 1 of 1
==4391==    at 0x483577F: malloc (vg_replace_malloc.c:299)
==4391==    by 0x109146: main (malloc.c:10)
==4391==
==4391== LEAK SUMMARY:
==4391==    definitely lost: 4 bytes in 1 blocks
==4391==    indirectly lost: 0 bytes in 0 blocks
==4391==      possibly lost: 0 bytes in 0 blocks
==4391==    still reachable: 0 bytes in 0 blocks
==4391==         suppressed: 0 bytes in 0 blocks
==4391==
==4391== For counts of detected and suppressed errors, rerun with: -v
==4391== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

